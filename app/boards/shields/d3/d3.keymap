#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV   1
#define NUM   2
#define SYM   3

/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none &hm LGUI Q &hm LALT W &hm LCTRL E &hm LSHIFT R &kp T           &kp Y &hm LSHIFT U  &hm LCTRL I     &hm LALT O   &hm LGUI P &none
   &none &kp A      &kp S      &kp D       &kp F        &kp G           &kp H &kp J         &kp K           &kp L        &kp SEMI   &none
   &none &kp Z      &kp X      &kp C       &kp V        &kp B           &kp N &kp M         &kp COMMA       &kp DOT      &kp FSLH   &none
                         &lt SYM ESC    &lt NAV SPACE &kp TAB           &none &kp RSHIFT &lt NUM DEL
                        >;
                };
                nav {

                        bindings = <
   &none &kp LPAR  &kp RPAR  &none     &trans     &trans                      &trans &kp HOME  &kp UP   &kp END   &trans &none
   &none &kp LBRC  &kp RBRC  &kp LC(C) &kp LC(V)  &kp LG(LC(LEFT))            &trans &kp LEFT  &kp DOWN &kp RIGHT &trans &none
   &none &kp LBKT  &kp RBKT  &trans    &kp LC(Z)  &kp LG(LC(RIGHT))           &trans &trans    &trans   &trans    &trans &none
                                &trans     &trans     &trans            &trans  &trans   &trans
                        >;                         
                };                          
                num {

                        bindings = <
   &none &trans       &kp N7 &kp N8 &kp N9 &trans            &kp RC(RS(ESC)) &trans &trans &trans        &trans        &trans
   &none &kp KP_MINUS &kp N4 &kp N5 &kp N6 &kp PLUS          &trans          &trans &trans &kp LG(RS(S)) &kp LC(LA(A)) &trans
   &none &trans       &kp N1 &kp N2 &kp N3 &kp EQUAL         &trans          &trans &trans &trans        &trans        &trans
                    	     &kp N0     &trans     &trans              &trans  &trans   &trans
                        >;
                };
                sym {

                        bindings = <
   &none &kp APOS &trans    &kp EXCL  &trans   &trans      &trans    &kp UNDER &kp PIPE &trans  &kp PRCNT &none
   &none &kp AT   &kp ASTRK &kp DLLR  &none    &none       &kp MINUS &kp HASH  &trans   &trans  &trans    &none
   &none &kp DQT   &trans    &trans    &kp AMPS &trans      &kp TILDE    &trans    &trans   &trans  &kp BSLH  &none
                         &trans     &trans     &trans      &trans  &trans   &trans
                        >;
                };                              
        };

        combos {
                compatible = "zmk,combos";
                combo_bksp {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp BKSP>;
                };
                combo_ent {
                        timeout-ms = <50>;
                        key-positions = <20 21>;
                        bindings = <&kp RET>;
                };
                combo_delete {
                        timeout-ms = <50>;
                        key-positions = <19 20 31 32>;
                        bindings = <&kp DEL>;
                };                                                              
        };                
  };